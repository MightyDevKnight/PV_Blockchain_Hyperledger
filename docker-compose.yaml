#
# Copyright . All Rights Reserved.
#

version: '2.1'

volumes:
  peer0:
  peer1:

services:

  ca:
    container_name: ca.${ORG:-org1}.${DOMAIN:-example.com}
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORG:-org1}.${DOMAIN:-example.com}-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/sk.pem
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORG:-org1}.${DOMAIN:-example.com}-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/sk.pem
#    ports:
#      - ${CA_PORT:-7054}:7054
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d --ca.name default'
    volumes:
      - ${PWD}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/ca/:/etc/hyperledger/fabric-ca-server-config
#      - ../artifacts/fabric-ca-server-config-${ORG:-org1}.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml

  peer0:
    container_name: peer0.${ORG:-org1}.${DOMAIN:-example.com}
    extends:
      file: base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.${ORG:-org1}.${DOMAIN:-example.com}
      - CORE_PEER_LOCALMSPID=${ORG:-org1}
      - CORE_PEER_ADDRESS=peer0.${ORG:-org1}.${DOMAIN:-example.com}:7051
#    ports:
#      - ${PEER0_PORT:-7051}:7051
#      - ${PEER0_EVENT_PORT:-7053}:7053
    volumes:
        - ${PWD}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer0.${ORG:-org1}.${DOMAIN:-example.com}/:/etc/hyperledger/crypto/peer
        - peer0:/var/hyperledger/production
    depends_on:
      - ca
 #   PEER_EXTRA_HOSTS

  peer1:
    container_name: peer1.${ORG:-org1}.${DOMAIN:-example.com}
    extends:
      file: base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.${ORG:-org1}.${DOMAIN:-example.com}
      - CORE_PEER_LOCALMSPID=${ORG:-org1}
      - CORE_PEER_ADDRESS=peer1.${ORG:-org1}.${DOMAIN:-example.com}:7051
#    ports:
#      - ${PEER1_PORT:-7056}:7051
#      - ${PEER1_EVENT_PORT:-7058}:7053
    volumes:
        - ${PWD}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer1.${ORG:-org1}.${DOMAIN:-example.com}/:/etc/hyperledger/crypto/peer
        - peer1:/var/hyperledger/production
    depends_on:
      - ca
#    PEER_EXTRA_HOSTS

  cli.peer:
    container_name: cli.${ORG:-org1}.${DOMAIN:-example.com}
    extends:
      file: base.yaml
      service: cli-base
    tty: true
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_LOCALMSPID=${ORG:-org1}
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peeradmin/msp
      - CORE_PEER_ADDRESS=peer0.${ORG:-org1}.${DOMAIN:-example.com}:7051
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt
    working_dir: /etc/hyperledger
    volumes:
    - /var/run/:/host/var/run/
    - ${PWD}/crypto-config:/etc/hyperledger/artifacts
    - ${PWD}/chaincode:/opt/chaincode
    - ${PWD}/chaincode/go:/opt/gopath/src
    - ${PWD}/crypto-config:/etc/hyperledger/crypto-config
    - ${PWD}/templates:/etc/hyperledger/templates
    - ${PWD}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/users/Admin@${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peeradmin
    - ${PWD}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer0.${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peer
    - ${PWD}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer1.${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peer1
    - ${PWD}/crypto-config/ordererOrganizations/${DOMAIN:-example.com}/users/Admin@${DOMAIN:-example.com}:/etc/hyperledger/crypto/ordereradmin
    - ${PWD}/crypto-config/ordererOrganizations/${DOMAIN:-example.com}/orderers/orderer.${DOMAIN:-example.com}:/etc/hyperledger/crypto/orderer

  # fabric-rest api server
  api:
#    build: ../fabric-starter-rest
    image: olegabu/fabric-starter-rest
    container_name: api.${ORG:-org1}.${DOMAIN:-example.com}
    ports:
      - ${API_PORT:-4000}:3000
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
      - CRYPTO_CONFIG_DIR=/usr/src/app/crypto-config
      - WEBAPP_DIR=/usr/src/app/webapp
      - ORGS=${ORGS:-"org1":"peer0.org1.example.com:7051"}
      - CAS=${CAS:-"org1":"ca.org1.example.com:7054"}
      - DISCOVER_AS_LOCALHOST=false
      - ENROLL_ID=admin
      - ENROLL_SECRET=adminpw
      - P=$PWD
    depends_on:
      - peer0
      - peer1
    volumes:
      - $PWD/crypto-config:/usr/src/app/crypto-config
      - $PWD/webapp:/usr/src/app/webapp
    command: sh -c "npm start"
#    API_EXTRA_HOSTS

#  api:
#    extends:
#      file: base.yaml
#      service: api-base
#    container_name: api.${ORG:-org1}.${DOMAIN:-example.com}
#    ports:
#      - ${API_PORT:-4000}:4000
#    environment:
#      - ORG=${ORG:-org1}
#      - DOMAIN=${DOMAIN:-example.com}
#      - PORT=4000
#    depends_on:
#      - peer0
#      - peer1
#    API_EXTRA_HOSTS

  # simple http server to disseminate certificates
  www.peer:
    extends:
      file: base.yaml
      service: www-base
    container_name: www.${ORG:-org1}.${DOMAIN:-example.com}
#    ports:
#      - ${WWW_PORT:-8081}:80
    volumes:
      - ${PWD}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/msp:/usr/share/nginx/html/msp
      - ${PWD}/crypto-config/configtx:/usr/share/nginx/html/configtx

networks:
  default:
    external:
      name: fabric-starter_default